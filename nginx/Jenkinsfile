pipeline {
    agent any
  
    environment {
        REGISTRY = 'docker.io'
        IMAGE_NAME = 'freewenxiao/nginx-test'
        IMAGE_TAG = "${env.BUILD_NUMBER}"
        FULL_IMAGE = "${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}"
        GIT_REPO = 'https://github.com/freewenxiao/yexiangfeng.git'
    }
    
    stages {
        stage('Setup Docker') {
            steps {
                script {
                    // 获取 Docker 工具路径
                    def dockerPath = tool name: 'docker', type: 'org.jenkinsci.plugins.docker.commons.tools.DockerTool'
                    
                    // 添加到 PATH
                    env.PATH = "${dockerPath}/bin:${env.PATH}"
                    
                    // 验证安装
                    sh """
                        echo "Docker installed at: ${dockerPath}"
                        docker --version
                    """
                }
            }
        }
        stage('Fix Docker Permissions') {
            steps {
                script {
                    sh '''
                        # 创建 docker 组（如果不存在）
                        sudo groupadd docker || true
                        
                        # 将当前用户（通常是 jenkins）添加到 docker 组
                        sudo usermod -aG docker $USER || true
                        
                        # 更改 docker.sock 的权限
                        sudo chmod 666 /var/run/docker.sock || true
                        
                        # 重启 Docker 服务
                        sudo systemctl restart docker || true
                        
                        # 验证 Docker 守护进程状态
                        sudo systemctl status docker
                    '''
                }
            }
        }
        stage('Clone Repository') {
            steps {
                checkout scm
            }
        }
        
        stage('Build Docker Image') {
            steps {
                script {
                    dockerImage = docker.build(FULL_IMAGE, "-f ./nginx/Dockerfile .")
                }
            }
        }
        
        stage('Push Docker Image') {
            steps {
                script {
                    // 关键修复：使用正确的注册表 URL
                    docker.withRegistry("https://${REGISTRY}", 'cbc0d5e2-33f3-4ef9-8fff-05432f02dfaa') {
                        dockerImage.push()
                    }
                }
            }
        }
        
        stage('Update Deployment Config') {
            steps {
                script {
                    // 安全地处理 Git 操作
                    withCredentials([
                        usernamePassword(
                            credentialsId: 'b03f9ac5-8f56-439b-a32a-6837b400ade5',
                            usernameVariable: 'GIT_USER',
                            passwordVariable: 'GIT_PASSWORD'
                        )
                    ]) {
                        dir('yexiangfeng') {
                            // 克隆仓库
                            sh """
                                git clone https://${GIT_USER}:${GIT_PASSWORD}@${GIT_REPO.split('://')[1]} .
                            """
                            
                            // 更新部署文件
                            sh "sed -i 's|image:.*|image: ${FULL_IMAGE}|' deployment.yaml"
                            
                            // 提交更改
                            sh """
                                git config user.email "jenkins@example.com"
                                git config user.name "Jenkins"
                                git add deployment.yaml
                                git commit -m 'Update image to ${IMAGE_TAG}'
                                git push
                            """
                        }
                    }
                }
            }
        }
    }
}
    
