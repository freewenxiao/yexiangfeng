pipeline {
    agent any
    environment {
        REGISTRY = 'docker.io'
        IMAGE_NAME = 'nginx-test'  
        IMAGE_TAG = "${env.BUILD_NUMBER}"
    }
    stages {
        stage('Clone Repository') {
            steps {
                checkout scm
            }
        }
        
        stage('Build Docker Image') {
            steps {
                script {
                    withCredentials([usernamePassword(
                        credentialsId: 'cbc0d5e2-33f3-4ef9-8fff-05432f02dfaa',
                        usernameVariable: 'DOCKER_USER',
                        passwordVariable: 'DOCKER_PASS'
                    )]) {
                        def fullImageName = "${DOCKER_USER}/${IMAGE_NAME}:${IMAGE_TAG}"
                        dockerImage = docker.build(fullImageName)
                    }
                }
            }
        }
        
        stage('Push Docker Image') {
            steps {
                script {
                    withCredentials([usernamePassword(
                        credentialsId: 'cbc0d5e2-33f3-4ef9-8fff-05432f02dfaa',
                        usernameVariable: 'DOCKER_USER',
                        passwordVariable: 'DOCKER_PASS'
                    )]) {
                        def fullImageName = "${DOCKER_USER}/${IMAGE_NAME}:${IMAGE_TAG}"
                        
                        sh """
                            docker login -u ${DOCKER_USER} -p ${DOCKER_PASS} ${REGISTRY}
                        """
                        
                        docker.withRegistry("https://${REGISTRY}", "credentials-id:cbc0d5e2-33f3-4ef9-8fff-05432f02dfaa") {

                            sh "docker push ${fullImageName}"
                            
                            sh "docker tag ${fullImageName} ${DOCKER_USER}/${IMAGE_NAME}:latest"
                            sh "docker push ${DOCKER_USER}/${IMAGE_NAME}:latest"
                        }
                    }
                }
            }
        }
        
        stage('Update Deployment Config') {
            steps {
                script {
                    dir('config-repo') {

                        checkout([
                            $class: 'GitSCM',
                            branches: [[name: '*/main']],
                            extensions: [[$class: 'CleanBeforeCheckout']],
                            userRemoteConfigs: [[
                                url: 'https://github.com/freewenxiao/yexiangfeng.git',
                                credentialsId: 'b03f9ac5-8f56-439b-a32a-6837b400ade5'
                            ]]
                        ])
                        
                        withCredentials([usernamePassword(
                            credentialsId: 'cbc0d5e2-33f3-4ef9-8fff-05432f02dfaa',
                            usernameVariable: 'DOCKER_USER',
                            passwordVariable: 'DOCKER_PASS'
                        )]) {

                            def fullImageName = "${DOCKER_USER}/${IMAGE_NAME}:${IMAGE_TAG}"
                            sh "sed -i 's|image:.*|image: ${fullImageName}|' deployment.yaml"
                        }
                        

                        sh 'git config user.email "jenkins@example.com"'
                        sh 'git config user.name "Jenkins CI"'
                        

                        sh 'git add deployment.yaml'
                        sh "git commit -m 'Update image tag to ${IMAGE_TAG}'"
                        

                        sshagent(['b03f9ac5-8f56-439b-a32a-6837b400ade5']) {
                            sh 'git push origin main'
                        }
                    }
                }
            }
        }
    }
    
    post {
        always {
            sh '''
                docker logout ${REGISTRY} || true
                rm -f ${HOME}/.docker/config.json || true
            '''
            cleanWs()
        }
    }
}
